version: '3.4'

services:
  php:
    build:
      context: ./symfony
    container_name: php
    depends_on:
      - mysql
    env_file:
      - ./symfony/.env
    # Comment out these volumes in production
    volumes:
      - ./symfony:/srv/symfony:rw,cached
    # If you develop on Linux, comment out the following volumes to just use bind-mounted project directory from host
    environment:
      # If you develop on Windows change this to remote_host=docker.for.win.localhost
      # If you develop on Linux change this to remote_host=172.17.0.1
      XDEBUG_CONFIG: "remote_host=docker.for.mac.localhost idekey=IDE_XDEBUG"

  symfony:
    build:
      context: ./symfony
      dockerfile: Dockerfile.nginx
    container_name: symfony
    depends_on:
      - php
    ports:
      - "8080:80"
    volumes:
      - ./symfony/public:/srv/symfony/public:ro

  mysql:
    # In production, you may want to use a managed database service
    image: mariadb
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    command: --log-bin=/var/lib/mysql/mysql-bin.log --binlog-format=ROW --server-id=1 --init-file /var/mysql/data/init.sql
    # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
    volumes:
      - ./symfony/docker/mysql:/var/mysql/data:ro
      - db-data:/var/lib/mysql:rw

volumes:
  db-data: {}
